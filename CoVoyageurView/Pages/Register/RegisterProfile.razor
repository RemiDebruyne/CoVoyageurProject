@page "/register/profile/"
@using CoVoyageurView.Services
@using static CoVoyageurCore.Models.Profile
@inject IApiQueryService<Profile> service;
@inject HttpClient client
@inject UserState userState
@inject NavigationManager Navigation
<PageTitle>Profile</PageTitle>
<div class="flex justify-center">

    @if (!UserIsLogged)
    {
        <img src="images/Loading_icon.gif" />
    }
    @if (UserIsLogged)
    {
        <div class=" flex flex-col items-center w-8/12 min-h-[80%] mx-auto rounded-2xl bg-white overflow-hidden">
            <h1 class="text-5xl text-center font-bold text-primary-500 my-4">@(User.FirstName == null ? "Welcome !" : $"Welcome {User.FirstName}")</h1>

            <div class=" w-3/4">
                @*             <!-- Profile picture section -->
            <section>
            <EditForm Model="Profile"></EditForm>
            <h2>Profile picture</h2>
            </section>  *@


                <!-- Dropdown menu / multi-select-->
                <!-- Preferences section section -->
                <h2 class="text-lg text-center font-semibold mb-6">Here you can customize your preferences</h2>
                <p class="mb-4">It's important for passengers and for us to know how you prefer to drive ! This way, we'll match you with people who better fit your preferences. If your in a hurry, you can still do this <NavLink href="/register/profile/car" class="text-sm font-thin text-blue-500 underline">later.</NavLink> </p>


                <div class="flex items-center">
                    <MudSwitch @bind-Value="Music" Color="Color.Success" />
                    <label for="music">I like music</label>
                </div>
                <div class="flex items-center">
                    <MudSwitch @bind-Value="Tabaco" Color="Color.Success" />
                    <label for="tabaco">I'm fine with people smoking a cigarette</label>
                </div>
                <div class="flex items-center">
                    <MudSwitch @bind-Value="Animal" Color="Color.Success" />
                    <label for="animal">I'm fine with people having animals in the car</label>
                </div>
                <button type="button" onclick="@(() => HandleSubmit())" class="block mx-auto btn">Save</button>
                <p class="text-red-500">@ErrorMessage</p>
            </div>
        </div>
    }
</div>




@code {
    public User User { get; set; }
    public Profile Profile { get; set; } = new()
        {
            Preferences = new()
        };
    [CascadingParameter]
    public bool UserIsLogged { get; set; }

    public string ErrorMessage { get; set; }

    public bool Music { get; set; }
    public bool Tabaco { get; set; }
    public bool Animal { get; set; }


    protected override async Task OnInitializedAsync()
    {
        User = userState.User;
    }

    protected override async Task OnParametersSetAsync()
    {
        if (UserIsLogged)
        {
            User = userState.User;
            Profile.UserId = User.Id;

        }

    }

    public async void HandleSubmit()
    {
        if (Music)
            Profile.Preferences.Add(Preference.Musique);
        else Profile.Preferences.Remove(Preference.Musique);

        if (Tabaco)
            Profile.Preferences.Add(Preference.Tabac);
        else Profile.Preferences.Remove(Preference.Tabac);

        if (Animal)
            Profile.Preferences.Add(Preference.Animaux);
        else Profile.Preferences.Remove(Preference.Animaux);

        var success = await service.Post(Profile);

        if (!success)
            ErrorMessage = "Something went wrong... Please try again";

        if (success)
        {
            ErrorMessage = "";
            userState.Profile = Profile;
            Navigation.NavigateTo("/register/profile/car");

        }


    }
}
