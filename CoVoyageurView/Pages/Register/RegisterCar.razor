@page "/register/profile/car"
@using CoVoyageurView.Services
@using CoVoyageurCore.Models
@inject IApiQueryService<Car> service
@inject UserState userState
@inject NavigationManager Navigation

<PageTitle>Cars</PageTitle>

<div class="flex justify-center items-center h-full">
    <div class=" flex flex-col items-center w-full">
        <h1 class="text-5xl text-center font-bold text-primary-500 my-5">We're almost done !</h1>
        <h2 class="text-lg text-center my-3">All you need to start diving is a car ! Not planning to be a driver ? You can <NavLink href="/" class="text-blue-500 underline">skip this step.</NavLink></h2>

        <div class="flex @(Cars.Count > 0 ? "justify-around" : "justify-center") w-full">
            @if (Cars.Count > 0)
            {
                <div class="flex flex-col gap-8 overflow-auto max-h-screen w-80">
                    @foreach (var car in Cars)
                    {
                        <CarCard Car="car" />
                    }
                </div>
            }
            <div class="w-7/12 ">
                <EditForm Model="Car" OnValidSubmit="SaveCar" class="[&>*]:mb-4">
                    <DataAnnotationsValidator />

                    <div>
                        <label for="brand">Brand</label>
                        <InputText id="brand" class="input-register" @bind-Value="Car.Brand"></InputText>
                        <small class="text-red-500">
                            <ValidationMessage For="() => Car.Brand" />
                        </small>
                    </div>
                    <div>
                        <label for="model">Model</label>
                        <InputText id="model" class="input-register" @bind-Value="Car.Model"></InputText>
                        <small class="text-red-500">
                            <ValidationMessage For="() => Car.Model" />
                        </small>
                    </div>
                    <div>
                        <label for="license">License</label>
                        <InputText id="license" class="input-register" @bind-Value="Car.LicensePlate"></InputText>
                    </div>
                    <div>
                        <label for="color">Color</label>
                        <InputSelect id="color" class="input-register" @bind-Value="Car.Color">
                            @foreach (Car.CarColor color in Enum.GetValues(typeof(Car.CarColor)))
                            {
                                <option value="@color">@(color != Car.CarColor.Nothing ? color : "Select a color")</option>
                            }
                        </InputSelect>
                        <small class="text-red-500">
                            <ValidationMessage For="() => Car.Color" />
                        </small>

                    </div>
                    <div class="flex justify-center gap-8">
                        <button type="submit" class="btn">Add</button>
                        <NavLink href="/" class="btn-empty">Save & go to Home page</NavLink>
                    </div>

                </EditForm>
            </div>

        </div>
    </div>
</div>



@code {
    public Car Car { get; set; } = new();
    public List<Car> Cars { get; set; } = new();


    public void SaveCar()
    {
        var car = new Car()
            {
                Brand = Car.Brand,
                Model = Car.Model,
                LicensePlate = Car.LicensePlate,
                Color = Car.Color,
                UserId = userState.User.Id
            };
        Cars.Add(car);
        service.Post(car);
        Car = new();
        // Car = new();

    }
}

